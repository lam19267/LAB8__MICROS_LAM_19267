

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 12:20:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0219                     __pidataBANK0:
   215                           
   216                           ;initializer for _sietes
   217  0219  343F               	retlw	63
   218  021A  3406               	retlw	6
   219  021B  345B               	retlw	91
   220  021C  344F               	retlw	79
   221  021D  3466               	retlw	102
   222  021E  346D               	retlw	109
   223  021F  347D               	retlw	125
   224  0220  3407               	retlw	7
   225  0221  347F               	retlw	127
   226  0222  346F               	retlw	111
   227  0009                     _PORTE	set	9
   228  0006                     _PORTB	set	6
   229  0005                     _PORTA	set	5
   230  001E                     _ADRESH	set	30
   231  0007                     _PORTC	set	7
   232  001F                     _ADCON0bits	set	31
   233  000C                     _PIR1bits	set	12
   234  0001                     _TMR0	set	1
   235  000B                     _INTCONbits	set	11
   236  0008                     _PORTD	set	8
   237  0009                     _PORTEbits	set	9
   238  005A                     _T0IF	set	90
   239  008C                     _PIE1bits	set	140
   240  009F                     _ADCON1bits	set	159
   241  0081                     _OPTION_REGbits	set	129
   242  008F                     _OSCCONbits	set	143
   243  0089                     _TRISE	set	137
   244  0088                     _TRISD	set	136
   245  0087                     _TRISC	set	135
   246  0085                     _TRISA	set	133
   247  0189                     _ANSELH	set	393
   248  0188                     _ANSEL	set	392
   249                           
   250                           	psect	cinit
   251  0011                     start_initialization:	
   252                           ; #config settings
   253                           
   254  0011                     __initialization:
   255                           
   256                           ; Initialize objects allocated to BANK0
   257  0011  1383               	bcf	3,7	;select IRP bank0
   258  0012  3035               	movlw	low (__pdataBANK0+10)
   259  0013  00FD               	movwf	btemp+-1
   260  0014  3002               	movlw	high __pidataBANK0
   261  0015  00FE               	movwf	btemp
   262  0016  3019               	movlw	low __pidataBANK0
   263  0017  00FF               	movwf	btemp+1
   264  0018  302B               	movlw	low __pdataBANK0
   265  0019  0084               	movwf	4
   266  001A  120A  118A  220A  120A  118A  	fcall	init_ram0
   267                           
   268                           ; Clear objects allocated to BANK0
   269  001F  01B5               	clrf	__pbssBANK0& (0+127)
   270  0020  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   271  0021  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   272  0022  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   273                           
   274                           ; Clear objects allocated to COMMON
   275  0023  01F6               	clrf	__pbssCOMMON& (0+127)
   276  0024  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   277  0025  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   278  0026  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   279  0027                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282  0027                     __end_of__initialization:
   283  0027  0183               	clrf	3
   284  0028  120A  118A  29D8   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMMON
   287  0076                     __pbssCOMMON:
   288  0076                     _resultado:
   289  0076                     	ds	1
   290  0077                     _num:
   291  0077                     	ds	1
   292  0078                     _decenas:
   293  0078                     	ds	1
   294  0079                     _centenas:
   295  0079                     	ds	1
   296                           
   297                           	psect	bssBANK0
   298  0035                     __pbssBANK0:
   299  0035                     _banderas:
   300  0035                     	ds	2
   301  0037                     _resultados:
   302  0037                     	ds	1
   303  0038                     _unidades:
   304  0038                     	ds	1
   305                           
   306                           	psect	dataBANK0
   307  002B                     __pdataBANK0:
   308  002B                     _sietes:
   309  002B                     	ds	10
   310                           
   311                           	psect	inittext
   312  0206                     init_fetch0:	
   313                           ;	Called with low address in FSR and high address in W
   314                           
   315  0206  087E               	movf	btemp,w
   316  0207  008A               	movwf	10
   317  0208  087F               	movf	btemp+1,w
   318  0209  0082               	movwf	2
   319  020A                     init_ram0:	
   320                           ;Called with:
   321                           ;	high address of idata address in btemp 
   322                           ;	low address of idata address in btemp+1 
   323                           ;	low address of data in FSR
   324                           ;	high address + 1 of data in btemp-1
   325                           
   326  020A  120A  118A  2206  120A  118A  	fcall	init_fetch0
   327  020F  0080               	movwf	0
   328  0210  0A84               	incf	4,f
   329  0211  0804               	movf	4,w
   330  0212  067D               	xorwf	btemp+-1,w
   331  0213  1903               	btfsc	3,2
   332  0214  3400               	retlw	0
   333  0215  0AFF               	incf	btemp+1,f
   334  0216  1903               	btfsc	3,2
   335  0217  0AFE               	incf	btemp,f
   336  0218  2A0A               	goto	init_ram0
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:
   340  0070                     ?_config:
   341  0070                     ?_division:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_isr:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_main:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 1 bytes @ 0x0
   355  0070                     	ds	4
   356  0074                     ??_config:
   357  0074                     ??___awdiv:	
   358                           ; 1 bytes @ 0x4
   359                           
   360  0074                     ??___awmod:	
   361                           ; 1 bytes @ 0x4
   362                           
   363                           
   364                           ; 1 bytes @ 0x4
   365  0074                     	ds	1
   366  0075                     ??_main:
   367                           
   368                           ; 1 bytes @ 0x5
   369  0075                     	ds	1
   370                           
   371                           	psect	cstackBANK0
   372  0020                     __pcstackBANK0:
   373  0020                     ?___awdiv:
   374  0020                     ?___awmod:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0020                     ___awdiv@divisor:	
   378                           ; 2 bytes @ 0x0
   379                           
   380  0020                     ___awmod@divisor:	
   381                           ; 2 bytes @ 0x0
   382                           
   383                           
   384                           ; 2 bytes @ 0x0
   385  0020                     	ds	2
   386  0022                     ___awdiv@dividend:
   387  0022                     ___awmod@dividend:	
   388                           ; 2 bytes @ 0x2
   389                           
   390                           
   391                           ; 2 bytes @ 0x2
   392  0022                     	ds	2
   393  0024                     ___awdiv@counter:
   394  0024                     ___awmod@counter:	
   395                           ; 1 bytes @ 0x4
   396                           
   397                           
   398                           ; 1 bytes @ 0x4
   399  0024                     	ds	1
   400  0025                     ___awdiv@sign:
   401  0025                     ___awmod@sign:	
   402                           ; 1 bytes @ 0x5
   403                           
   404                           
   405                           ; 1 bytes @ 0x5
   406  0025                     	ds	1
   407  0026                     ___awdiv@quotient:
   408                           
   409                           ; 2 bytes @ 0x6
   410  0026                     	ds	2
   411  0028                     ??_division:
   412                           
   413                           ; 1 bytes @ 0x8
   414  0028                     	ds	3
   415                           
   416                           	psect	maintext
   417  01D8                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 82 in file "lab8.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          1       0       0       0       0
   440 ;;      Totals:         1       0       0       0       0
   441 ;;Total ram usage:        1 bytes
   442 ;; Hardware stack levels required when called:    3
   443 ;; This function calls:
   444 ;;		_config
   445 ;;		_division
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _main
   453  01D8                     _main:
   454  01D8                     l1124:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;lab8.c: 83:     config();
   460  01D8  120A  118A  21A4  120A  118A  	fcall	_config
   461  01DD                     l1126:
   462                           
   463                           ;lab8.c: 84:     ADCON0bits.GO = 1;
   464  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   465  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   466  01DF  149F               	bsf	31,1	;volatile
   467  01E0                     l1128:
   468                           
   469                           ;lab8.c: 87:         if (ADCON0bits.GO == 0){
   470  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   471  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   472  01E2  189F               	btfsc	31,1	;volatile
   473  01E3  29E5               	goto	u721
   474  01E4  29E6               	goto	u720
   475  01E5                     u721:
   476  01E5  29FD               	goto	l1140
   477  01E6                     u720:
   478  01E6                     l1130:
   479                           
   480                           ;lab8.c: 88:             if (ADCON0bits.CHS == 1){
   481  01E6  0C1F               	rrf	31,w	;volatile
   482  01E7  00F5               	movwf	??_main
   483  01E8  0C75               	rrf	??_main,w
   484  01E9  390F               	andlw	15
   485  01EA  3A01               	xorlw	1
   486  01EB  1D03               	skipz
   487  01EC  29EE               	goto	u731
   488  01ED  29EF               	goto	u730
   489  01EE                     u731:
   490  01EE  29F2               	goto	l1134
   491  01EF                     u730:
   492  01EF                     l1132:
   493                           
   494                           ;lab8.c: 89:                 ADCON0bits.CHS = 0;}
   495  01EF  30C3               	movlw	-61
   496  01F0  059F               	andwf	31,f	;volatile
   497  01F1  29F6               	goto	l1136
   498  01F2                     l1134:
   499                           
   500                           ;lab8.c: 91:                 ADCON0bits.CHS = 1;}
   501  01F2  081F               	movf	31,w	;volatile
   502  01F3  39C3               	andlw	-61
   503  01F4  3804               	iorlw	4
   504  01F5  009F               	movwf	31	;volatile
   505  01F6                     l1136:
   506                           
   507                           ;lab8.c: 92:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   508  01F6  3021               	movlw	33
   509  01F7  00F5               	movwf	??_main
   510  01F8                     u747:
   511  01F8  0BF5               	decfsz	??_main,f
   512  01F9  29F8               	goto	u747
   513  01FA                     l1138:
   514                           
   515                           ;lab8.c: 93:             ADCON0bits.GO = 1;
   516  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   517  01FB  1303               	bcf	3,6	;RP1=0, select bank0
   518  01FC  149F               	bsf	31,1	;volatile
   519  01FD                     l1140:
   520                           
   521                           ;lab8.c: 95:         division();
   522  01FD  120A  118A  2094  120A  118A  	fcall	_division
   523  0202  29E0               	goto	l1128
   524  0203  120A  118A  280E   	ljmp	start
   525  0206                     __end_of_main:
   526                           
   527                           	psect	text1
   528  0094                     __ptext1:	
   529 ;; *************** function _division *****************
   530 ;; Defined at:
   531 ;;		line 144 in file "lab8.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      unsigned char 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       3       0       0       0
   548 ;;      Totals:         0       3       0       0       0
   549 ;;Total ram usage:        3 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    2
   552 ;; This function calls:
   553 ;;		___awdiv
   554 ;;		___awmod
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _division
   562  0094                     _division:
   563  0094                     l1118:	
   564                           ;incstack = 0
   565                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   566                           
   567                           
   568                           ;lab8.c: 145:     centenas = num/100;
   569  0094  3064               	movlw	100
   570  0095  1283               	bcf	3,5	;RP0=0, select bank0
   571  0096  1303               	bcf	3,6	;RP1=0, select bank0
   572  0097  00A0               	movwf	___awdiv@divisor
   573  0098  3000               	movlw	0
   574  0099  00A1               	movwf	___awdiv@divisor+1
   575  009A  0877               	movf	_num,w
   576  009B  00A8               	movwf	??_division
   577  009C  01A9               	clrf	??_division+1
   578  009D  0828               	movf	??_division,w
   579  009E  00A2               	movwf	___awdiv@dividend
   580  009F  0829               	movf	??_division+1,w
   581  00A0  00A3               	movwf	___awdiv@dividend+1
   582  00A1  120A  118A  202B  120A  118A  	fcall	___awdiv
   583  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   584  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   585  00A8  0820               	movf	?___awdiv,w
   586  00A9  00AA               	movwf	??_division+2
   587  00AA  082A               	movf	??_division+2,w
   588  00AB  00F9               	movwf	_centenas
   589                           
   590                           ;lab8.c: 146:     resultado = num%100;
   591  00AC  3064               	movlw	100
   592  00AD  00A0               	movwf	___awmod@divisor
   593  00AE  3000               	movlw	0
   594  00AF  00A1               	movwf	___awmod@divisor+1
   595  00B0  0877               	movf	_num,w
   596  00B1  00A8               	movwf	??_division
   597  00B2  01A9               	clrf	??_division+1
   598  00B3  0828               	movf	??_division,w
   599  00B4  00A2               	movwf	___awmod@dividend
   600  00B5  0829               	movf	??_division+1,w
   601  00B6  00A3               	movwf	___awmod@dividend+1
   602  00B7  120A  118A  20F3  120A  118A  	fcall	___awmod
   603  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   604  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   605  00BE  0820               	movf	?___awmod,w
   606  00BF  00AA               	movwf	??_division+2
   607  00C0  082A               	movf	??_division+2,w
   608  00C1  00F6               	movwf	_resultado
   609                           
   610                           ;lab8.c: 147:     decenas = resultado/10;
   611  00C2  300A               	movlw	10
   612  00C3  00A0               	movwf	___awdiv@divisor
   613  00C4  3000               	movlw	0
   614  00C5  00A1               	movwf	___awdiv@divisor+1
   615  00C6  0876               	movf	_resultado,w
   616  00C7  00A8               	movwf	??_division
   617  00C8  01A9               	clrf	??_division+1
   618  00C9  0828               	movf	??_division,w
   619  00CA  00A2               	movwf	___awdiv@dividend
   620  00CB  0829               	movf	??_division+1,w
   621  00CC  00A3               	movwf	___awdiv@dividend+1
   622  00CD  120A  118A  202B  120A  118A  	fcall	___awdiv
   623  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   624  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   625  00D4  0820               	movf	?___awdiv,w
   626  00D5  00AA               	movwf	??_division+2
   627  00D6  082A               	movf	??_division+2,w
   628  00D7  00F8               	movwf	_decenas
   629                           
   630                           ;lab8.c: 148:     resultados = resultado%10;
   631  00D8  300A               	movlw	10
   632  00D9  00A0               	movwf	___awmod@divisor
   633  00DA  3000               	movlw	0
   634  00DB  00A1               	movwf	___awmod@divisor+1
   635  00DC  0876               	movf	_resultado,w
   636  00DD  00A8               	movwf	??_division
   637  00DE  01A9               	clrf	??_division+1
   638  00DF  0828               	movf	??_division,w
   639  00E0  00A2               	movwf	___awmod@dividend
   640  00E1  0829               	movf	??_division+1,w
   641  00E2  00A3               	movwf	___awmod@dividend+1
   642  00E3  120A  118A  20F3  120A  118A  	fcall	___awmod
   643  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   644  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   645  00EA  0820               	movf	?___awmod,w
   646  00EB  00AA               	movwf	??_division+2
   647  00EC  082A               	movf	??_division+2,w
   648  00ED  00B7               	movwf	_resultados
   649  00EE                     l1120:
   650                           
   651                           ;lab8.c: 149:     unidades = resultados;
   652  00EE  0837               	movf	_resultados,w
   653  00EF  00A8               	movwf	??_division
   654  00F0  0828               	movf	??_division,w
   655  00F1  00B8               	movwf	_unidades
   656  00F2                     l94:
   657  00F2  0008               	return
   658  00F3                     __end_of_division:
   659                           
   660                           	psect	text2
   661  00F3                     __ptext2:	
   662 ;; *************** function ___awmod *****************
   663 ;; Defined at:
   664 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  divisor         2    0[BANK0 ] int 
   667 ;;  dividend        2    2[BANK0 ] int 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  sign            1    5[BANK0 ] unsigned char 
   670 ;;  counter         1    4[BANK0 ] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2    0[BANK0 ] int 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       4       0       0       0
   681 ;;      Locals:         0       2       0       0       0
   682 ;;      Temps:          1       0       0       0       0
   683 ;;      Totals:         1       6       0       0       0
   684 ;;Total ram usage:        7 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_division
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function ___awmod
   696  00F3                     ___awmod:
   697  00F3                     l1080:	
   698                           ;incstack = 0
   699                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   700                           
   701  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   702  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   703  00F5  01A5               	clrf	___awmod@sign
   704  00F6                     l1082:
   705  00F6  1FA3               	btfss	___awmod@dividend+1,7
   706  00F7  28F9               	goto	u631
   707  00F8  28FA               	goto	u630
   708  00F9                     u631:
   709  00F9  2901               	goto	l1088
   710  00FA                     u630:
   711  00FA                     l1084:
   712  00FA  09A2               	comf	___awmod@dividend,f
   713  00FB  09A3               	comf	___awmod@dividend+1,f
   714  00FC  0AA2               	incf	___awmod@dividend,f
   715  00FD  1903               	skipnz
   716  00FE  0AA3               	incf	___awmod@dividend+1,f
   717  00FF                     l1086:
   718  00FF  01A5               	clrf	___awmod@sign
   719  0100  0AA5               	incf	___awmod@sign,f
   720  0101                     l1088:
   721  0101  1FA1               	btfss	___awmod@divisor+1,7
   722  0102  2904               	goto	u641
   723  0103  2905               	goto	u640
   724  0104                     u641:
   725  0104  290A               	goto	l1092
   726  0105                     u640:
   727  0105                     l1090:
   728  0105  09A0               	comf	___awmod@divisor,f
   729  0106  09A1               	comf	___awmod@divisor+1,f
   730  0107  0AA0               	incf	___awmod@divisor,f
   731  0108  1903               	skipnz
   732  0109  0AA1               	incf	___awmod@divisor+1,f
   733  010A                     l1092:
   734  010A  0820               	movf	___awmod@divisor,w
   735  010B  0421               	iorwf	___awmod@divisor+1,w
   736  010C  1903               	btfsc	3,2
   737  010D  290F               	goto	u651
   738  010E  2910               	goto	u650
   739  010F                     u651:
   740  010F  293F               	goto	l1110
   741  0110                     u650:
   742  0110                     l1094:
   743  0110  01A4               	clrf	___awmod@counter
   744  0111  0AA4               	incf	___awmod@counter,f
   745  0112  291E               	goto	l1100
   746  0113                     l1096:
   747  0113  3001               	movlw	1
   748  0114                     u665:
   749  0114  1003               	clrc
   750  0115  0DA0               	rlf	___awmod@divisor,f
   751  0116  0DA1               	rlf	___awmod@divisor+1,f
   752  0117  3EFF               	addlw	-1
   753  0118  1D03               	skipz
   754  0119  2914               	goto	u665
   755  011A                     l1098:
   756  011A  3001               	movlw	1
   757  011B  00F4               	movwf	??___awmod
   758  011C  0874               	movf	??___awmod,w
   759  011D  07A4               	addwf	___awmod@counter,f
   760  011E                     l1100:
   761  011E  1FA1               	btfss	___awmod@divisor+1,7
   762  011F  2921               	goto	u671
   763  0120  2922               	goto	u670
   764  0121                     u671:
   765  0121  2913               	goto	l1096
   766  0122                     u670:
   767  0122                     l1102:
   768  0122  0821               	movf	___awmod@divisor+1,w
   769  0123  0223               	subwf	___awmod@dividend+1,w
   770  0124  1D03               	skipz
   771  0125  2928               	goto	u685
   772  0126  0820               	movf	___awmod@divisor,w
   773  0127  0222               	subwf	___awmod@dividend,w
   774  0128                     u685:
   775  0128  1C03               	skipc
   776  0129  292B               	goto	u681
   777  012A  292C               	goto	u680
   778  012B                     u681:
   779  012B  2932               	goto	l1106
   780  012C                     u680:
   781  012C                     l1104:
   782  012C  0820               	movf	___awmod@divisor,w
   783  012D  02A2               	subwf	___awmod@dividend,f
   784  012E  0821               	movf	___awmod@divisor+1,w
   785  012F  1C03               	skipc
   786  0130  03A3               	decf	___awmod@dividend+1,f
   787  0131  02A3               	subwf	___awmod@dividend+1,f
   788  0132                     l1106:
   789  0132  3001               	movlw	1
   790  0133                     u695:
   791  0133  1003               	clrc
   792  0134  0CA1               	rrf	___awmod@divisor+1,f
   793  0135  0CA0               	rrf	___awmod@divisor,f
   794  0136  3EFF               	addlw	-1
   795  0137  1D03               	skipz
   796  0138  2933               	goto	u695
   797  0139                     l1108:
   798  0139  3001               	movlw	1
   799  013A  02A4               	subwf	___awmod@counter,f
   800  013B  1D03               	btfss	3,2
   801  013C  293E               	goto	u701
   802  013D  293F               	goto	u700
   803  013E                     u701:
   804  013E  2922               	goto	l1102
   805  013F                     u700:
   806  013F                     l1110:
   807  013F  0825               	movf	___awmod@sign,w
   808  0140  1903               	btfsc	3,2
   809  0141  2943               	goto	u711
   810  0142  2944               	goto	u710
   811  0143                     u711:
   812  0143  2949               	goto	l1114
   813  0144                     u710:
   814  0144                     l1112:
   815  0144  09A2               	comf	___awmod@dividend,f
   816  0145  09A3               	comf	___awmod@dividend+1,f
   817  0146  0AA2               	incf	___awmod@dividend,f
   818  0147  1903               	skipnz
   819  0148  0AA3               	incf	___awmod@dividend+1,f
   820  0149                     l1114:
   821  0149  0823               	movf	___awmod@dividend+1,w
   822  014A  00A1               	movwf	?___awmod+1
   823  014B  0822               	movf	___awmod@dividend,w
   824  014C  00A0               	movwf	?___awmod
   825  014D                     l346:
   826  014D  0008               	return
   827  014E                     __end_of___awmod:
   828                           
   829                           	psect	text3
   830  002B                     __ptext3:	
   831 ;; *************** function ___awdiv *****************
   832 ;; Defined at:
   833 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  divisor         2    0[BANK0 ] int 
   836 ;;  dividend        2    2[BANK0 ] int 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  quotient        2    6[BANK0 ] int 
   839 ;;  sign            1    5[BANK0 ] unsigned char 
   840 ;;  counter         1    4[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  2    0[BANK0 ] int 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       4       0       0       0
   851 ;;      Locals:         0       4       0       0       0
   852 ;;      Temps:          1       0       0       0       0
   853 ;;      Totals:         1       8       0       0       0
   854 ;;Total ram usage:        9 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:    1
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_division
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function ___awdiv
   866  002B                     ___awdiv:
   867  002B                     l1036:	
   868                           ;incstack = 0
   869                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   870                           
   871  002B  1283               	bcf	3,5	;RP0=0, select bank0
   872  002C  1303               	bcf	3,6	;RP1=0, select bank0
   873  002D  01A5               	clrf	___awdiv@sign
   874  002E                     l1038:
   875  002E  1FA1               	btfss	___awdiv@divisor+1,7
   876  002F  2831               	goto	u531
   877  0030  2832               	goto	u530
   878  0031                     u531:
   879  0031  2839               	goto	l1044
   880  0032                     u530:
   881  0032                     l1040:
   882  0032  09A0               	comf	___awdiv@divisor,f
   883  0033  09A1               	comf	___awdiv@divisor+1,f
   884  0034  0AA0               	incf	___awdiv@divisor,f
   885  0035  1903               	skipnz
   886  0036  0AA1               	incf	___awdiv@divisor+1,f
   887  0037                     l1042:
   888  0037  01A5               	clrf	___awdiv@sign
   889  0038  0AA5               	incf	___awdiv@sign,f
   890  0039                     l1044:
   891  0039  1FA3               	btfss	___awdiv@dividend+1,7
   892  003A  283C               	goto	u541
   893  003B  283D               	goto	u540
   894  003C                     u541:
   895  003C  2846               	goto	l1050
   896  003D                     u540:
   897  003D                     l1046:
   898  003D  09A2               	comf	___awdiv@dividend,f
   899  003E  09A3               	comf	___awdiv@dividend+1,f
   900  003F  0AA2               	incf	___awdiv@dividend,f
   901  0040  1903               	skipnz
   902  0041  0AA3               	incf	___awdiv@dividend+1,f
   903  0042                     l1048:
   904  0042  3001               	movlw	1
   905  0043  00F4               	movwf	??___awdiv
   906  0044  0874               	movf	??___awdiv,w
   907  0045  06A5               	xorwf	___awdiv@sign,f
   908  0046                     l1050:
   909  0046  01A6               	clrf	___awdiv@quotient
   910  0047  01A7               	clrf	___awdiv@quotient+1
   911  0048                     l1052:
   912  0048  0820               	movf	___awdiv@divisor,w
   913  0049  0421               	iorwf	___awdiv@divisor+1,w
   914  004A  1903               	btfsc	3,2
   915  004B  284D               	goto	u551
   916  004C  284E               	goto	u550
   917  004D                     u551:
   918  004D  2885               	goto	l1072
   919  004E                     u550:
   920  004E                     l1054:
   921  004E  01A4               	clrf	___awdiv@counter
   922  004F  0AA4               	incf	___awdiv@counter,f
   923  0050  285C               	goto	l1060
   924  0051                     l1056:
   925  0051  3001               	movlw	1
   926  0052                     u565:
   927  0052  1003               	clrc
   928  0053  0DA0               	rlf	___awdiv@divisor,f
   929  0054  0DA1               	rlf	___awdiv@divisor+1,f
   930  0055  3EFF               	addlw	-1
   931  0056  1D03               	skipz
   932  0057  2852               	goto	u565
   933  0058                     l1058:
   934  0058  3001               	movlw	1
   935  0059  00F4               	movwf	??___awdiv
   936  005A  0874               	movf	??___awdiv,w
   937  005B  07A4               	addwf	___awdiv@counter,f
   938  005C                     l1060:
   939  005C  1FA1               	btfss	___awdiv@divisor+1,7
   940  005D  285F               	goto	u571
   941  005E  2860               	goto	u570
   942  005F                     u571:
   943  005F  2851               	goto	l1056
   944  0060                     u570:
   945  0060                     l1062:
   946  0060  3001               	movlw	1
   947  0061                     u585:
   948  0061  1003               	clrc
   949  0062  0DA6               	rlf	___awdiv@quotient,f
   950  0063  0DA7               	rlf	___awdiv@quotient+1,f
   951  0064  3EFF               	addlw	-1
   952  0065  1D03               	skipz
   953  0066  2861               	goto	u585
   954  0067  0821               	movf	___awdiv@divisor+1,w
   955  0068  0223               	subwf	___awdiv@dividend+1,w
   956  0069  1D03               	skipz
   957  006A  286D               	goto	u595
   958  006B  0820               	movf	___awdiv@divisor,w
   959  006C  0222               	subwf	___awdiv@dividend,w
   960  006D                     u595:
   961  006D  1C03               	skipc
   962  006E  2870               	goto	u591
   963  006F  2871               	goto	u590
   964  0070                     u591:
   965  0070  2878               	goto	l1068
   966  0071                     u590:
   967  0071                     l1064:
   968  0071  0820               	movf	___awdiv@divisor,w
   969  0072  02A2               	subwf	___awdiv@dividend,f
   970  0073  0821               	movf	___awdiv@divisor+1,w
   971  0074  1C03               	skipc
   972  0075  03A3               	decf	___awdiv@dividend+1,f
   973  0076  02A3               	subwf	___awdiv@dividend+1,f
   974  0077                     l1066:
   975  0077  1426               	bsf	___awdiv@quotient,0
   976  0078                     l1068:
   977  0078  3001               	movlw	1
   978  0079                     u605:
   979  0079  1003               	clrc
   980  007A  0CA1               	rrf	___awdiv@divisor+1,f
   981  007B  0CA0               	rrf	___awdiv@divisor,f
   982  007C  3EFF               	addlw	-1
   983  007D  1D03               	skipz
   984  007E  2879               	goto	u605
   985  007F                     l1070:
   986  007F  3001               	movlw	1
   987  0080  02A4               	subwf	___awdiv@counter,f
   988  0081  1D03               	btfss	3,2
   989  0082  2884               	goto	u611
   990  0083  2885               	goto	u610
   991  0084                     u611:
   992  0084  2860               	goto	l1062
   993  0085                     u610:
   994  0085                     l1072:
   995  0085  0825               	movf	___awdiv@sign,w
   996  0086  1903               	btfsc	3,2
   997  0087  2889               	goto	u621
   998  0088  288A               	goto	u620
   999  0089                     u621:
  1000  0089  288F               	goto	l1076
  1001  008A                     u620:
  1002  008A                     l1074:
  1003  008A  09A6               	comf	___awdiv@quotient,f
  1004  008B  09A7               	comf	___awdiv@quotient+1,f
  1005  008C  0AA6               	incf	___awdiv@quotient,f
  1006  008D  1903               	skipnz
  1007  008E  0AA7               	incf	___awdiv@quotient+1,f
  1008  008F                     l1076:
  1009  008F  0827               	movf	___awdiv@quotient+1,w
  1010  0090  00A1               	movwf	?___awdiv+1
  1011  0091  0826               	movf	___awdiv@quotient,w
  1012  0092  00A0               	movwf	?___awdiv
  1013  0093                     l333:
  1014  0093  0008               	return
  1015  0094                     __end_of___awdiv:
  1016                           
  1017                           	psect	text4
  1018  01A4                     __ptext4:	
  1019 ;; *************** function _config *****************
  1020 ;; Defined at:
  1021 ;;		line 100 in file "lab8.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _config
  1051  01A4                     _config:
  1052  01A4                     l768:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _config: [wreg+status,2+status,0]
  1055                           
  1056                           
  1057                           ;lab8.c: 101:     ANSEL = 0b00000011;
  1058  01A4  3003               	movlw	3
  1059  01A5  1683               	bsf	3,5	;RP0=1, select bank3
  1060  01A6  1703               	bsf	3,6	;RP1=1, select bank3
  1061  01A7  0088               	movwf	8	;volatile
  1062                           
  1063                           ;lab8.c: 102:     ANSELH = 0b11111111;
  1064  01A8  30FF               	movlw	255
  1065  01A9  0089               	movwf	9	;volatile
  1066                           
  1067                           ;lab8.c: 104:     TRISA = 0b00000011;
  1068  01AA  3003               	movlw	3
  1069  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1070  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1071  01AD  0085               	movwf	5	;volatile
  1072  01AE                     l770:
  1073                           
  1074                           ;lab8.c: 105:     TRISC = 0x00;
  1075  01AE  0187               	clrf	7	;volatile
  1076  01AF                     l772:
  1077                           
  1078                           ;lab8.c: 106:     TRISD = 0x00;
  1079  01AF  0188               	clrf	8	;volatile
  1080  01B0                     l774:
  1081                           
  1082                           ;lab8.c: 107:     TRISE = 0x00;
  1083  01B0  0189               	clrf	9	;volatile
  1084  01B1                     l776:
  1085                           
  1086                           ;lab8.c: 109:     PORTA = 0x00;
  1087  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1088  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1089  01B3  0185               	clrf	5	;volatile
  1090  01B4                     l778:
  1091                           
  1092                           ;lab8.c: 110:     PORTB = 0x00;
  1093  01B4  0186               	clrf	6	;volatile
  1094  01B5                     l780:
  1095                           
  1096                           ;lab8.c: 111:     PORTC = 0x00;
  1097  01B5  0187               	clrf	7	;volatile
  1098  01B6                     l782:
  1099                           
  1100                           ;lab8.c: 112:     PORTD = 0x00;
  1101  01B6  0188               	clrf	8	;volatile
  1102  01B7                     l784:
  1103                           
  1104                           ;lab8.c: 113:     PORTE = 0x00;
  1105  01B7  0189               	clrf	9	;volatile
  1106  01B8                     l786:
  1107                           
  1108                           ;lab8.c: 115:     OSCCONbits.IRCF2 = 0;
  1109  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1110  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1111  01BA  130F               	bcf	15,6	;volatile
  1112  01BB                     l788:
  1113                           
  1114                           ;lab8.c: 116:     OSCCONbits.IRCF1 = 1;
  1115  01BB  168F               	bsf	15,5	;volatile
  1116  01BC                     l790:
  1117                           
  1118                           ;lab8.c: 117:     OSCCONbits.IRCF0 = 0;
  1119  01BC  120F               	bcf	15,4	;volatile
  1120  01BD                     l792:
  1121                           
  1122                           ;lab8.c: 118:     OSCCONbits.SCS = 1;
  1123  01BD  140F               	bsf	15,0	;volatile
  1124  01BE                     l794:
  1125                           
  1126                           ;lab8.c: 120:     OPTION_REGbits.T0CS = 0;
  1127  01BE  1281               	bcf	1,5	;volatile
  1128  01BF                     l796:
  1129                           
  1130                           ;lab8.c: 121:     OPTION_REGbits.PSA = 0;
  1131  01BF  1181               	bcf	1,3	;volatile
  1132  01C0                     l798:
  1133                           
  1134                           ;lab8.c: 122:     OPTION_REGbits.PS2 = 1;
  1135  01C0  1501               	bsf	1,2	;volatile
  1136  01C1                     l800:
  1137                           
  1138                           ;lab8.c: 123:     OPTION_REGbits.PS1 = 1;
  1139  01C1  1481               	bsf	1,1	;volatile
  1140  01C2                     l802:
  1141                           
  1142                           ;lab8.c: 124:     OPTION_REGbits.PS0 = 1;
  1143  01C2  1401               	bsf	1,0	;volatile
  1144  01C3                     l804:
  1145                           
  1146                           ;lab8.c: 126:     ADCON1bits.ADFM = 0;
  1147  01C3  139F               	bcf	31,7	;volatile
  1148  01C4                     l806:
  1149                           
  1150                           ;lab8.c: 127:     ADCON1bits.VCFG0 = 0;
  1151  01C4  121F               	bcf	31,4	;volatile
  1152  01C5                     l808:
  1153                           
  1154                           ;lab8.c: 128:     ADCON1bits.VCFG1 = 0;
  1155  01C5  129F               	bcf	31,5	;volatile
  1156  01C6                     l810:
  1157                           
  1158                           ;lab8.c: 130:     ADCON0bits.ADCS0 = 1;
  1159  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1160  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1161  01C8  171F               	bsf	31,6	;volatile
  1162  01C9                     l812:
  1163                           
  1164                           ;lab8.c: 131:     ADCON0bits.ADCS1 = 1;
  1165  01C9  179F               	bsf	31,7	;volatile
  1166  01CA                     l814:
  1167                           
  1168                           ;lab8.c: 132:     ADCON0bits.CHS = 0;
  1169  01CA  30C3               	movlw	-61
  1170  01CB  059F               	andwf	31,f	;volatile
  1171  01CC                     l816:
  1172                           
  1173                           ;lab8.c: 133:     ADCON0bits.ADON = 1;
  1174  01CC  141F               	bsf	31,0	;volatile
  1175  01CD                     l818:
  1176                           
  1177                           ;lab8.c: 136:     INTCONbits.GIE = 1;
  1178  01CD  178B               	bsf	11,7	;volatile
  1179  01CE                     l820:
  1180                           
  1181                           ;lab8.c: 137:     INTCONbits.T0IE = 1;
  1182  01CE  168B               	bsf	11,5	;volatile
  1183  01CF                     l822:
  1184                           
  1185                           ;lab8.c: 138:     INTCONbits.T0IF = 0;
  1186  01CF  110B               	bcf	11,2	;volatile
  1187  01D0                     l824:
  1188                           
  1189                           ;lab8.c: 139:     INTCONbits.PEIE = 1;
  1190  01D0  170B               	bsf	11,6	;volatile
  1191  01D1                     l826:
  1192                           
  1193                           ;lab8.c: 140:     PIE1bits.ADIE = 1;
  1194  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1195  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1196  01D3  170C               	bsf	12,6	;volatile
  1197  01D4                     l828:
  1198                           
  1199                           ;lab8.c: 141:     PIR1bits.ADIF = 0;
  1200  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1201  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1202  01D6  130C               	bcf	12,6	;volatile
  1203  01D7                     l91:
  1204  01D7  0008               	return
  1205  01D8                     __end_of_config:
  1206                           
  1207                           	psect	text5
  1208  014E                     __ptext5:	
  1209 ;; *************** function _isr *****************
  1210 ;; Defined at:
  1211 ;;		line 52 in file "lab8.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0
  1227 ;;      Temps:          4       0       0       0       0
  1228 ;;      Totals:         4       0       0       0       0
  1229 ;;Total ram usage:        4 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		Interrupt level 1
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _isr
  1240  014E                     _isr:
  1241  014E                     i1l980:
  1242                           
  1243                           ;lab8.c: 53:     if(T0IF == 1){
  1244  014E  1D0B               	btfss	11,2	;volatile
  1245  014F  2951               	goto	u46_21
  1246  0150  2952               	goto	u46_20
  1247  0151                     u46_21:
  1248  0151  2984               	goto	i1l1008
  1249  0152                     u46_20:
  1250  0152                     i1l982:
  1251                           
  1252                           ;lab8.c: 54:         PORTEbits.RE0 = 0;
  1253  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0154  1009               	bcf	9,0	;volatile
  1256                           
  1257                           ;lab8.c: 55:         PORTEbits.RE1 = 1;
  1258  0155  1489               	bsf	9,1	;volatile
  1259  0156                     i1l984:
  1260                           
  1261                           ;lab8.c: 56:         PORTD = sietes[decenas];
  1262  0156  0878               	movf	_decenas,w
  1263  0157  3E2B               	addlw	(low (_sietes| 0))& (0+255)
  1264  0158  0084               	movwf	4
  1265  0159  1383               	bcf	3,7	;select IRP bank0
  1266  015A  0800               	movf	0,w
  1267  015B  0088               	movwf	8	;volatile
  1268  015C                     i1l986:
  1269                           
  1270                           ;lab8.c: 57:         banderas = 1;
  1271  015C  3001               	movlw	1
  1272  015D  00B5               	movwf	_banderas
  1273  015E  3000               	movlw	0
  1274  015F  00B6               	movwf	_banderas+1
  1275  0160                     i1l988:
  1276                           
  1277                           ;lab8.c: 58:         if (banderas == 1){
  1278  0160  0335               	decf	_banderas,w
  1279  0161  0436               	iorwf	_banderas+1,w
  1280  0162  1D03               	btfss	3,2
  1281  0163  2965               	goto	u47_21
  1282  0164  2966               	goto	u47_20
  1283  0165                     u47_21:
  1284  0165  2971               	goto	i1l996
  1285  0166                     u47_20:
  1286  0166                     i1l990:
  1287                           
  1288                           ;lab8.c: 59:             PORTEbits.RE1 = 0;
  1289  0166  1089               	bcf	9,1	;volatile
  1290                           
  1291                           ;lab8.c: 60:             PORTEbits.RE2 = 1;
  1292  0167  1509               	bsf	9,2	;volatile
  1293  0168                     i1l992:
  1294                           
  1295                           ;lab8.c: 61:             PORTD = sietes[centenas];
  1296  0168  0879               	movf	_centenas,w
  1297  0169  3E2B               	addlw	(low (_sietes| 0))& (0+255)
  1298  016A  0084               	movwf	4
  1299  016B  0800               	movf	0,w
  1300  016C  0088               	movwf	8	;volatile
  1301  016D                     i1l994:
  1302                           
  1303                           ;lab8.c: 62:             banderas = 2;}
  1304  016D  3002               	movlw	2
  1305  016E  00B5               	movwf	_banderas
  1306  016F  3000               	movlw	0
  1307  0170  00B6               	movwf	_banderas+1
  1308  0171                     i1l996:
  1309                           
  1310                           ;lab8.c: 63:         if (banderas == 2){
  1311  0171  3002               	movlw	2
  1312  0172  0635               	xorwf	_banderas,w
  1313  0173  0436               	iorwf	_banderas+1,w
  1314  0174  1D03               	btfss	3,2
  1315  0175  2977               	goto	u48_21
  1316  0176  2978               	goto	u48_20
  1317  0177                     u48_21:
  1318  0177  2981               	goto	i1l1004
  1319  0178                     u48_20:
  1320  0178                     i1l998:
  1321                           
  1322                           ;lab8.c: 64:             PORTEbits.RE2 = 0;
  1323  0178  1109               	bcf	9,2	;volatile
  1324                           
  1325                           ;lab8.c: 65:             PORTEbits.RE0 = 1;
  1326  0179  1409               	bsf	9,0	;volatile
  1327  017A                     i1l1000:
  1328                           
  1329                           ;lab8.c: 66:             PORTD = sietes[unidades];
  1330  017A  0838               	movf	_unidades,w
  1331  017B  3E2B               	addlw	(low (_sietes| 0))& (0+255)
  1332  017C  0084               	movwf	4
  1333  017D  0800               	movf	0,w
  1334  017E  0088               	movwf	8	;volatile
  1335  017F                     i1l1002:
  1336                           
  1337                           ;lab8.c: 67:             banderas = 0;}
  1338  017F  01B5               	clrf	_banderas
  1339  0180  01B6               	clrf	_banderas+1
  1340  0181                     i1l1004:
  1341                           
  1342                           ;lab8.c: 68:         INTCONbits.T0IF = 0;
  1343  0181  110B               	bcf	11,2	;volatile
  1344  0182                     i1l1006:
  1345                           
  1346                           ;lab8.c: 69:         TMR0 = 255;}
  1347  0182  30FF               	movlw	255
  1348  0183  0081               	movwf	1	;volatile
  1349  0184                     i1l1008:
  1350                           
  1351                           ;lab8.c: 71:     if(PIR1bits.ADIF == 1){
  1352  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0186  1F0C               	btfss	12,6	;volatile
  1355  0187  2989               	goto	u49_21
  1356  0188  298A               	goto	u49_20
  1357  0189                     u49_21:
  1358  0189  299B               	goto	i1l77
  1359  018A                     u49_20:
  1360  018A                     i1l1010:
  1361                           
  1362                           ;lab8.c: 72:         if(ADCON0bits.CHS == 0)
  1363  018A  0C1F               	rrf	31,w	;volatile
  1364  018B  00F0               	movwf	??_isr
  1365  018C  0C70               	rrf	??_isr,w
  1366  018D  390F               	andlw	15
  1367  018E  3A00               	xorlw	0
  1368  018F  1D03               	skipz
  1369  0190  2992               	goto	u50_21
  1370  0191  2993               	goto	u50_20
  1371  0192                     u50_21:
  1372  0192  2996               	goto	i1l1014
  1373  0193                     u50_20:
  1374  0193                     i1l1012:
  1375                           
  1376                           ;lab8.c: 73:             PORTC = ADRESH;
  1377  0193  081E               	movf	30,w	;volatile
  1378  0194  0087               	movwf	7	;volatile
  1379  0195  299A               	goto	i1l1016
  1380  0196                     i1l1014:
  1381                           
  1382                           ;lab8.c: 76:             num = ADRESH;
  1383  0196  081E               	movf	30,w	;volatile
  1384  0197  00F0               	movwf	??_isr
  1385  0198  0870               	movf	??_isr,w
  1386  0199  00F7               	movwf	_num
  1387  019A                     i1l1016:
  1388                           
  1389                           ;lab8.c: 78:         PIR1bits.ADIF = 0;
  1390  019A  130C               	bcf	12,6	;volatile
  1391  019B                     i1l77:
  1392  019B  0873               	movf	??_isr+3,w
  1393  019C  008A               	movwf	10
  1394  019D  0872               	movf	??_isr+2,w
  1395  019E  0084               	movwf	4
  1396  019F  0E71               	swapf	??_isr+1,w
  1397  01A0  0083               	movwf	3
  1398  01A1  0EFE               	swapf	btemp,f
  1399  01A2  0E7E               	swapf	btemp,w
  1400  01A3  0009               	retfie
  1401  01A4                     __end_of_isr:
  1402  007E                     btemp	set	126	;btemp
  1403  007E                     wtemp0	set	126
  1404                           
  1405                           	psect	intentry
  1406  0004                     __pintentry:	
  1407                           ;incstack = 0
  1408                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1409                           
  1410  0004                     interrupt_function:
  1411  007E                     saved_w	set	btemp
  1412  0004  00FE               	movwf	btemp
  1413  0005  0E03               	swapf	3,w
  1414  0006  00F1               	movwf	??_isr+1
  1415  0007  0804               	movf	4,w
  1416  0008  00F2               	movwf	??_isr+2
  1417  0009  080A               	movf	10,w
  1418  000A  00F3               	movwf	??_isr+3
  1419  000B  120A  118A  294E   	ljmp	_isr
  1420                           
  1421                           	psect	config
  1422                           
  1423                           ;Config register CONFIG1 @ 0x2007
  1424                           ;	Oscillator Selection bits
  1425                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1426                           ;	Watchdog Timer Enable bit
  1427                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1428                           ;	Power-up Timer Enable bit
  1429                           ;	PWRTE = ON, PWRT enabled
  1430                           ;	RE3/MCLR pin function select bit
  1431                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1432                           ;	Code Protection bit
  1433                           ;	CP = OFF, Program memory code protection is disabled
  1434                           ;	Data Code Protection bit
  1435                           ;	CPD = OFF, Data memory code protection is disabled
  1436                           ;	Brown Out Reset Selection bits
  1437                           ;	BOREN = OFF, BOR disabled
  1438                           ;	Internal External Switchover bit
  1439                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1440                           ;	Fail-Safe Clock Monitor Enabled bit
  1441                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1442                           ;	Low Voltage Programming Enable bit
  1443                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1444                           ;	In-Circuit Debugger Mode bit
  1445                           ;	DEBUG = 0x1, unprogrammed default
  1446  2007                     	org	8199
  1447  2007  20C4               	dw	8388
  1448                           
  1449                           ;Config register CONFIG2 @ 0x2008
  1450                           ;	Brown-out Reset Selection bit
  1451                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1452                           ;	Flash Program Memory Self Write Enable bits
  1453                           ;	WRT = OFF, Write protection off
  1454  2008                     	org	8200
  1455  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                             _config
                           _division
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _division
     ___awdiv
     ___awmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 12:20:16 2021

                      pc 0002                       l91 01D7                       l94 00F2  
           ___awdiv@sign 0025                       fsr 0004                      l333 0093  
                    l346 014D                      l800 01C1                      l810 01C6  
                    l802 01C2                      l820 01CE                      l812 01C9  
                    l804 01C3                      l822 01CF                      l814 01CA  
                    l806 01C4                      l824 01D0                      l816 01CC  
                    l808 01C5                      l826 01D1                      l818 01CD  
                    l770 01AE                      l828 01D4                      l780 01B5  
                    l772 01AF                      l790 01BC                      l782 01B6  
                    l774 01B0                      l792 01BD                      l784 01B7  
                    l776 01B1                      l768 01A4                      l794 01BE  
                    l786 01B8                      l778 01B4                      l796 01BF  
                    l788 01BB                      l798 01C0                      u610 0085  
                    u530 0032                      u611 0084                      u531 0031  
                    u620 008A                      u540 003D                      u700 013F  
                    u621 0089                      u605 0079                      u541 003C  
                    u701 013E                      u550 004E                      u710 0144  
                    u630 00FA                      u551 004D                      u711 0143  
                    u631 00F9                      u640 0105                      u720 01E6  
                    u641 0104                      u721 01E5                      u570 0060  
                    u650 0110                      u730 01EF                      u571 005F  
                    u651 010F                      u731 01EE                      u565 0052  
                    u590 0071                      u670 0122                      u591 0070  
                    u671 0121                      u680 012C                      u585 0061  
                    u681 012B                      u665 0114                      u595 006D  
                    u747 01F8                      u685 0128                      u695 0133  
                    _isr 014E                      _num 0077                      fsr0 0004  
                    indf 0000             ___awmod@sign 0025                     l1100 011E  
                   l1102 0122                     l1110 013F                     l1040 0032  
                   l1112 0144                     l1104 012C                     l1120 00EE  
                   l1050 0046                     l1042 0037                     l1114 0149  
                   l1106 0132                     l1130 01E6                     l1060 005C  
                   l1052 0048                     l1044 0039                     l1036 002B  
                   l1108 0139                     l1132 01EF                     l1140 01FD  
                   l1124 01D8                     l1070 007F                     l1062 0060  
                   l1054 004E                     l1046 003D                     l1038 002E  
                   l1118 0094                     l1134 01F2                     l1126 01DD  
                   l1064 0071                     l1056 0051                     l1072 0085  
                   l1048 0042                     l1080 00F3                     l1136 01F6  
                   l1128 01E0                     l1074 008A                     l1066 0077  
                   l1058 0058                     l1090 0105                     l1082 00F6  
                   l1138 01FA                     l1076 008F                     l1068 0078  
                   l1092 010A                     l1084 00FA                     l1094 0110  
                   l1086 00FF                     l1096 0113                     l1088 0101  
                   l1098 011A                     ?_isr 0070                     _T0IF 005A  
                   i1l77 019B                     _TMR0 0001                     _main 01D8  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0094          __end_of___awmod 014E  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l980 014E  
                  i1l990 0166                    i1l982 0152                    i1l992 0168  
                  i1l984 0156                    i1l994 016D                    i1l986 015C  
                  i1l996 0171                    i1l988 0160                    i1l998 0178  
        ___awdiv@counter 0024                    u50_20 0193                    u50_21 0192  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u46_20 0152  
                  u46_21 0151                    u47_20 0166                    u47_21 0165  
                  u48_20 0178                    u48_21 0177                    u49_20 018A  
                  u49_21 0189                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0206                   ??_main 0075                   _ADRESH 001E  
       ___awdiv@dividend 0022                   _ANSELH 0189                   i1l1000 017A  
                 i1l1010 018A                   i1l1002 017F                   i1l1012 0193  
                 i1l1004 0181                   i1l1014 0196                   i1l1006 0182  
                 i1l1016 019A                   i1l1008 0184         __end_of_division 00F3  
              ??___awdiv 0074                ??___awmod 0074                   _config 01A4  
       ___awdiv@quotient 0026          ___awmod@divisor 0020                   _sietes 002B  
        ___awmod@counter 0024                   saved_w 007E  __end_of__initialization 0027  
         __pcstackCOMMON 0070             __pidataBANK0 0219           _OPTION_REGbits 0081  
             __pbssBANK0 0035               __pmaintext 01D8               __pintentry 0004  
                ?_config 0070                ?_division 0070                  ___awdiv 002B  
                ___awmod 00F3          __size_of_config 0034                  _decenas 0078  
                __ptext1 0094                  __ptext2 00F3                  __ptext3 002B  
                __ptext4 01A4                  __ptext5 014E             __size_of_isr 0056  
       ___awmod@dividend 0022     end_of_initialization 0027               ??_division 0028  
             _resultados 0037                _PORTEbits 0009           __end_of_config 01D8  
    start_initialization 0011              __end_of_isr 01A4               init_fetch0 0206  
               ??_config 0074              __pdataBANK0 002B              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_division 005F  
               ?___awdiv 0020                 ?___awmod 0020        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C                _resultado 0076  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of___awdiv 0069  
       __size_of___awmod 005B                 _banderas 0035                 _centenas 0079  
               _division 0094            __size_of_main 002E                 _unidades 0038  
             _INTCONbits 000B                 init_ram0 020A                 intlevel1 0000  
             _OSCCONbits 008F  
